{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEC,SAASC,EAAcC,EAAUC,GAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAEpCG,EAAAzB,GAAS0B,OAAOC,KAAK,CAAExB,SAAU,gBAEjC,IAAK,IAAIyB,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAE/B1B,EAAc0B,EAAI,EADGR,EAAQQ,EAAIL,GAE9BM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBqB,EAAAzB,GAAS0B,OAAOK,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEvE6B,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBqB,EAAAzB,GAAS0B,OAAOQ,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n\n    const form = document.querySelector('.form');\n\n    form.addEventListener('submit', function (event) {\n      event.preventDefault();\n\n      const delayInput = document.querySelector('input[name=\"delay\"]');\n      const stepInput = document.querySelector('input[name=\"step\"]');\n      const amountInput = document.querySelector('input[name=\"amount\"]');\n\n      const delay = parseInt(delayInput.value);\n      const step = parseInt(stepInput.value);\n      const amount = parseInt(amountInput.value);\n\n      Notiflix.Notify.init({ position: 'bottomRight' });\n\n      for (let i = 0; i < amount; i++) {\n        const currentDelay = delay + i * step;\n        createPromise(i + 1, currentDelay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n    });"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","$parcel$interopDefault","Notify","init","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.23771b4a.js.map"}